<Modal Title="Change Password" @bind-Hidden="hideModal">
    <Body>
        <EditForm id="ChangePassword" Model="@accountPasswordRequest" OnValidSubmit="HandleChangePassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <FormInputText Label="Old Password" type="password" @bind-Value="accountPasswordRequest.OldPassword"></FormInputText>
            <FormInputText Label="New Password" @bind-Value="accountPasswordRequest.NewPassword"></FormInputText>
            <FormInputText Label="Confirm Password" @bind-Value="confirmNewPassword"></FormInputText>
        </EditForm>
    </Body>
    <Footer>
        <button type="submit" class="btn btn-primary" form="ChangePassword">Change Password</button>
    </Footer>
</Modal>

@code {
    [Parameter] public AccountResponse account { get; set; } = new();

    private AccountPasswordRequest accountPasswordRequest = new();
    private string confirmNewPassword = string.Empty;
    private bool hideModal = true;

    public void Show()
    {
        hideModal = false;
        StateHasChanged();
    }

    private async Task HandleChangePassword()
    {
        if (accountPasswordRequest.NewPassword != confirmNewPassword)
        {
            await alert.Error("Passwords do not match.", "Error");
            return;
        }
        try
        {
            var response = await apiClient.AccountChangePasswordAsync(account.AccountID, accountPasswordRequest);

            if (response.StatusCode == 200)
                await alert.Success("Password changed successfully.", "Success");
            else
                await alert.Error("Failed to change password.", "Error");
        }
        catch (Exception ex)
        {
            await alert.Error(ex.Message, "Error");
        }
        finally
        {
            hideModal = true;
            StateHasChanged();
        }
    }
}
