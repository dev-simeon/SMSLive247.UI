@page "/Accounts/Profile"
@attribute [Authorize]
@using SMSLive247.UI.Pages.Accounts.SubAccounts.Modals

<PageTitle>Profile</PageTitle>

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <div>
                    <div class="mb-3">
                        <i class="bi bi-person-circle h1 text-primary"></i>
                    </div>
                    <div>
                        <h5 class="mb-0">@accountDetail.LastName @accountDetail.FirstName</h5>
                        <p class="text-muted mb-0">@accountDetail.AccountName</p>
                        <p class="text-muted mb-0">@accountDetail.Phone</p>
                        <p class="text-muted mb-0">+@(accountDetail.CountryCode)(GMT+@(accountDetail.TimeZone))</p>
                    </div>
                </div>
            </div>

            <div class="card-body border-top">
                <div class="row">
                    <div class="col-sm-6">
                        <div>
                            <p class="fw-medium mb-2">Wallet Balance :</p>
                            <h4>$ 6134.39</h4>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div>
                            <p class="fw-medium mb-2">SMS Credit Balance :</p>
                            <h4>C @accountDetail.Credits.ToString("F2")</h4>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer border-top">
                <button type="button" class="btn btn-primary" @onclick="() => updateProfileModal.show()">
                    Edit Basic Info
                </button>
                <button class="btn btn-outline-primary" @onclick="() => changePasswordModal.Show()">
                    Change Password
                </button>
            </div>
        </div>
    </div>
</div>

<ProfileInfoModal @ref="updateProfileModal" account="accountDetail" OnCompleted="FetchAccountInfo"></ProfileInfoModal>
<ChangePasswordModal @ref="changePasswordModal" account="accountDetail"></ChangePasswordModal>

@code {
    private AccountResponse accountDetail = new();
    private bool showBasicInfoModal;
    private ProfileInfoModal updateProfileModal = new();
    private ChangePasswordModal changePasswordModal = new();
    private bool showChangePasswordModal;

    protected override async Task OnInitializedAsync()
    {
        await FetchAccountInfo();
    }

    private async Task FetchAccountInfo()
    {
        try
        {
            var response = await apiClient.AccountGetAsync("self");

            if (response.StatusCode == 200)
            {
                accountDetail = response.Result;
            }
        }
        catch (Exception ex)
        {
            await alert.Error(ex.Message, "Error");
        }
    }
}
