@using SMSLive247.UI.Pages.Accounts.SubAccounts.Modals
@page "/Accounts/Profile"
@attribute [Authorize]

<PageTitle>SMSLive247 - Profile</PageTitle>
<Title>My Profile</Title>

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <div>
                    <div class="mb-3">
                        <i class="bi bi-person-circle h1 text-primary"></i>
                    </div>
                    <div>
                        <h5 class="mb-0">@account.LastName @account.FirstName</h5>
                        <p class="text-muted mb-0">@account.AccountName</p>
                        <p class="text-muted mb-0">@account.Phone</p>
                        <p class="text-muted mb-0">+@account.CountryCode [GMT + @account.TimeZone]</p>
                    </div>
                </div>
            </div>

            <div class="card-body border-top">
                <div class="row">
                    <div class="col-sm-6">
                        <div>
                            <p class="fw-medium mb-2">Wallet Balance:</p>
                            <h4>N 6,134.39</h4>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div>
                            <p class="fw-medium mb-2">SMS Credit Balance:</p>
                            <h4>C @account.Credits.ToString("#,##0")</h4>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer border-top">
                <button type="button" class="btn btn-primary" @onclick="() => profileModal.show()">
                    Edit Basic Info...
                </button>
                <button class="btn btn-outline-primary" @onclick="() => passwordModal.Show()">
                    Change Password...
                </button>
            </div>
        </div>
    </div>
</div>

<ProfileInfoModal @ref="profileModal" account="account" OnCompleted="FetchData"></ProfileInfoModal>
<ChangePasswordModal @ref="passwordModal" account="account"></ChangePasswordModal>

@code {
    private AccountResponse account = new();
    private ProfileInfoModal profileModal = new();
    private ChangePasswordModal passwordModal = new();

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    private async Task FetchData()
    {
        try
        {
            var response = await apiClient.AccountGetAsync("self");

            if (response.StatusCode == 200)
                account = response.Result;
        }
        catch (Exception ex)
        {
            await alert.Error(ex.Message, "Error");
        }
    }
}
