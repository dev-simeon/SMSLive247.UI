@page "/Wallet/PaymentComplete"

<div class="text-center">
    @if (errorMessage != null)
    {
        <svg width="100" height="100" class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
        <h2>Payment Failed!</h2>
        <p>@errorMessage</p>
    }
    else if (transaction != null && transaction.Status == "success")
    {
        <svg width="100" height="100" class="h-6 w-6 text-green-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
        <h2>Payment Successful!</h2>
        <p>We are delighted to inform you that we received your payment of @((transaction.AmountInKobo / 100).ToString("C")).</p>
    }
    else
    {
        <svg width="100" height="100" class="h-6 w-6 text-yellow-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18M12 3v18" />
        </svg>
        <h2>Payment Pending!</h2>
        <p>Your payment is still being processed. Please check back later.</p>
    }
</div>

@code {
    private Transaction transaction;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var currentUrl = nav.Uri;
            Console.WriteLine(currentUrl);
            var reference = currentUrl;
            transaction = await paystack.VerifyTransaction(reference);

            if (transaction.Status == "success")
            {
                await apiClient.PurchaseCompleteAsync(reference);
            }
            else
            {
                errorMessage = transaction.GatewayResponse;
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
