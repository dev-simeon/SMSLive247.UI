<EditModal TItem="AccountResponse" @ref="editor" LabelText="Bulk File"
    OnUpdate="OnUpdate"
    OnCompleted="OnCompleted">
    <FormInputText Label="Sender ID" @bind-Value="senderId"></FormInputText>
    <FormInputText Label="Delivery Email" @bind-Value="model.AccountID"></FormInputText>
    <FormInputText Label="Signature" @bind-Value="signature"></FormInputText>
    <FormField Label="TimeZone">
        <InputSelect class="form-select" @bind-Value="model.TimeZone">
            <option value="-12">GMT -12</option>
            <option value="-11">GMT -11</option>
            <option value="-10">GMT -10</option>
            <option value="-9">GMT -9</option>
            <option value="-8">GMT -8</option>
            <option value="-7">GMT -7</option>
            <option value="-6">GMT -6</option>
            <option value="-5">GMT -5</option>
            <option value="-4">GMT -4</option>
            <option value="-3">GMT -3</option>
            <option value="-2">GMT -2</option>
            <option value="-1">GMT -1</option>
            <option value="0">GMT</option>
            <option value="1">GMT +1</option>
            <option value="2">GMT +2</option>
            <option value="3">GMT +3</option>
            <option value="4">GMT +4</option>
            <option value="5">GMT +5</option>
            <option value="6">GMT +6</option>
            <option value="7">GMT +7</option>
            <option value="8">GMT +8</option>
            <option value="9">GMT +9</option>
            <option value="10">GMT +10</option>
            <option value="11">GMT +11</option>
            <option value="12">GMT +12</option>
        </InputSelect>
    </FormField>
</EditModal>

@code {
    [Parameter] public EventCallback OnCompleted { get; set; }
    private EditModal<AccountResponse> editor = new();
    private AccountResponse model => editor.Model;
    private string senderId = "";
    private string signature = "";

    public void Show(AccountResponse? account = null) => editor.Show(account);

    private async Task OnUpdate()
    {
        var updateRequest = new AccountUpdateRequest
        {
            TimeZone = model.TimeZone,
            Active = model.Active
        };

        await apiClient.AccountUpdateAsync(model.AccountID, updateRequest);
    }
}