<Card HeaderTitle="Bulk Files">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox" @onclick="SearchBulkFile">
                    </SearchBox>
                </Left>
                <Right>
                    <Button Type="Button.Style.ADD" @onclick="e => bulkFileModal.Show()">
                        New Bulk File
                    </Button>
                </Right>
            </LeftRight>
        </SearchArea>
        <Table Items="filteredItems">
            <Columns>
                <Column Header="Description">@context.Description</Column>
                <Column Header="Total In File">@context.TotalNumbers</Column>
                <Column Header="Def Code">@context.FileType</Column>
                <Column Header="Date Added">
                    <FormatDate DateTime="@context.DateCreated"></FormatDate>
                </Column>
                <Column>
                    <Actions OnDownload="() => bulkFileModal.Download(context)" 
                             OnDelete="() => bulkFileModal.Delete(context)">
                    </Actions>
                </Column>
            </Columns>
        </Table>
    </Body>
</Card>

<BulkFileModal @ref="bulkFileModal" OnCompleted="FetchData"></BulkFileModal>

@code {
    private SearchBox searchBox = new();
    private BulkFileModal bulkFileModal = new();
    private List<BatchFileResponse> items = [];
    private List<BatchFileResponse> filteredItems = [];


    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    private async Task FetchData()
    {
        var response = await apiClient.BatchFileListAsync();

        if (response.StatusCode == 200)
        {
            items = response.Result.Where(x => x.FileType == "txt").ToList();
            filteredItems = items;
        }
    }

    private void SearchBulkFile()
    {
        filteredItems = items;

        if (!string.IsNullOrWhiteSpace(searchBox.Text))
        {
            filteredItems = filteredItems.Where(x => x.Description.Contains(
                searchBox.Text, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }
}
