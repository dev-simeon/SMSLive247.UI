<EditModal Size="Modal.ModalSize.LARGE" TItem="GroupResponse" @ref="editor" LabelText="Group"
           OnCreate="OnCreate"
           OnUpdate="OnUpdate"
           OnDelete="OnDelete"
           OnCompleted="OnCompleted">

    <div class="form-group">
        <label class="form-label" for="n">Group Name</label>
        <InputText class="form-control w-50" id="n" @bind-Value="model.GroupName"></InputText>
    </div>

    @if (editor.EditMode == EditModal<GroupResponse>.EditModeEnum.DELETE)
    {
        <div class="mt-3">
            @foreach (var member in editor.Model.Members)
            {
                <span class="badge bg-info me-1">@member.ContactName</span>
            }
        </div>
    }
    else
    {
        <div class="mt-3">
            <label class="form-label">Select Contacts</label>
            <ContactSelctor @ref="contactSelector" Contacts="AllContacts" />
        </div>
    }
</EditModal>

@code {
    [Parameter] public List<ContactModel> AllContacts { get; set; } = [];
    [Parameter] public EventCallback OnCompleted { get; set; }

    private ContactSelctor contactSelector = new();
    private EditModal<GroupResponse> editor = new();
    private GroupResponse model => editor.Model;

    public void Delete(GroupResponse group) => editor.Delete(group);

    public void Show(GroupResponse? group = null)
    {
        var groupMembersIds = group?.Members?.Select(c => c.PhoneNumber).ToList() ?? [];

        if (groupMembersIds != null)
            AllContacts?.ForEach(c => c.Selected = groupMembersIds.Contains(c.Key));

        editor.Show(group);
    }


    private async Task OnCreate()
    {
        var groupMembersIds = AllContacts.Where(c => c.Selected).Select(c => c.Key).ToList();
        await apiClient.GroupCreateAsync(model.GroupName, groupMembersIds);
    }

    private async Task OnUpdate()
    {
        var groupMembersIds = AllContacts.Where(c => c.Selected).Select(c => c.Key).ToList();
        await apiClient.GroupUpdateAsync(model.GroupName, groupMembersIds);
    }

    private async Task OnDelete()
    {
        var question = "Are you sure you want to delete this group?";
        bool confirmed = await alert.Confirm(question, "Confirm Deletion");

        if (confirmed)
            await apiClient.GroupDeleteAsync(model.GroupName);
    }
}
