@using SMSLive247.UI.Pages.Messaging.Contacts.Modals

<Card HeaderTitle="CSV/Excel Files">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <input type="search" class="form-control" placeholder="Search..." @bind="searchText" @oninput="e => OnSearch(e.Value?.ToString()!)" />
                </Left>
                <Right>
                    <Button Type="Button.Style.ADD" @onclick="e => csvFileModal.Show()">
                        New CSV File
                    </Button>
                </Right>
            </LeftRight>
        </SearchArea>
        <Table Items="filteredItems">
            <Columns>
                <Column Header="File Name" Width="45%">@context.Description</Column>
                <Column Header="Total Numbers" Width="15%">
                    <div class="float-end p-2 pe-4">@context.TotalNumbers.ToString("#,##0")</div>
                </Column>
                <Column Header="Date Uploaded">
                    <FormatDate DateTime="@context.DateCreated"></FormatDate>
                </Column>
                <Column Header="Type">
                    <span class="badge text-bg-info">@context.FileType</span>
                </Column>
                <Column>
                    <Actions OnDownload="() => csvFileModal.Download(context)"
                             OnDelete="() => csvFileModal.Delete(context)">
                    </Actions>
                </Column>
            </Columns>
        </Table>
    </Body>
</Card>

<BulkFileModal @ref="csvFileModal" ForCSV="true" OnCompleted="FetchData"></BulkFileModal>

@code {
    private string searchText = string.Empty;
    private BulkFileModal csvFileModal = new();
    private List<BatchFileResponse> items = [];
    private List<BatchFileResponse> filteredItems = [];

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    private async Task FetchData()
    {
        var response = await apiClient.BatchFileListAsync();

        if (response.StatusCode == 200)
        {
            items = response.Result.Where(x => x.FileType == "csv").ToList();
            filteredItems = items;
        }
    }

    private void OnSearch(string input)
    {
        searchText = input;

        if (string.IsNullOrEmpty(searchText))
        {
            filteredItems = items;
        }
        else
        {
            filteredItems = items.Where(x => x.Description.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }
}
