<EditModal TItem="BatchFileResponse" @ref="editor" LabelText="Bulk File"
           OnCreate="OnCreate"
           OnDelete="OnDelete"
           OnDownload="OnDownload"
           OnCompleted="OnCompleted">
    @if (editor.EditMode == 0) //create=0, edit=1
    {
        <FormInputFile Label="Select File" OnChange="e => FileSelected(e)" Accept="@fileTypes"></FormInputFile>
            @if (ForCSV == false)
            {
            <FormField Label="Organize File">
                <InputRadioGroup @bind-Value="groupMode">
                    <div class="form-check form-check-inline">
                        <InputRadio class="form-check-input" id="r1" Value="@("NEW")" />
                        <label class="form-check-label" for="r1">Save as new file</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <InputRadio class="form-check-input" id="r2" Value="@("MERGE")" />
                        <label class="form-check-label" for="r2">Merge into existing file</label>
                    </div>
                </InputRadioGroup>
            </FormField>
        }
        @if (groupMode == "NEW")
        {
        <FormInputText Label="Group Name" @bind-Value="fileName"></FormInputText>
        }
        else if (groupMode == "MERGE")
        {
        <FormField Label="Select Group">
            <select class="form-select" @bind="fileName">
                <option value="group1">Group 1</option>
                <option value="group2">Group 2</option>
                <option value="group3">Another Group</option>
            </select>
        </FormField>
        }
    }
    else if (editor.EditMode >= 2) //delete=2, download=3
    {
        <FormInputText Label="Description" @bind-Value="editor.Model.Description" Disabled="true"></FormInputText>
        <FormInputNumber Label="Total In File" @bind-Value="editor.Model.TotalNumbers" Disabled="true"></FormInputNumber>
        <FormInputText Label="File Type" @bind-Value="editor.Model.FileType" Disabled="true"></FormInputText>
        <FormInputDate Label="Date Added" @bind-Value="editor.Model.DateCreated" Disabled="true"></FormInputDate>
    }
    <p class="mt-5">Note: Duplicate numbers will be removed.</p>
</EditModal>

@code {
    [Parameter] public bool ForCSV { get; set; } = false;
    [Parameter] public EventCallback OnCompleted { get; set; }


    private EditModal<BatchFileResponse> editor = new();
    private IBrowserFile? browserFile;
    private string groupMode = "NEW";
    private string fileName = string.Empty;
    private string fileTypes => ForCSV ? ".csv" : ".txt, .text";

    public void Show(BatchFileResponse? batchFile = null) => editor.Show(batchFile);
    public void Delete(BatchFileResponse batchFile) => editor.Delete(batchFile);
    public void Download(BatchFileResponse batchFile) => editor.Download(batchFile);

    private async Task OnCreate()
    {
        if (browserFile != null)
        {
            var file = new FileParameter(browserFile);
            var response = await apiClient.BatchFileCreateAsync(234, file);

            // if (response.StatusCode == 200)
            //     await alert.Success("Batch file was uploaded successfully.", "Upload Success");
            // else
            //     await alert.Error(response.StatusCode.ToString(), "Upload Failed");
        }
    }

    private async Task OnDelete()
    {
        var question = "Are you sure you want to delete this bulk file?";
        bool confirmed = await alert.Confirm(question, "Confirm Deletion");

        if (confirmed)
        {
            await apiClient.BatchFileDeleteAsync(editor.Model.BatchFileID);
        }
    }

    private async Task OnDownload()
    {
        var question = "Are you sure you want to download this bulk file?";
        bool confirmed = await alert.Confirm(question, "Confirm Download");

        if (confirmed)
        {
            await apiClient.BatchFileDownloadAsync(editor.Model.BatchFileID);
        }
    }

    private void FileSelected(InputFileChangeEventArgs e)
    {
        browserFile = e.File;
    }
}
