<EditModal TItem="BatchFileResponse" @ref="editor" LabelText="Bulk File"
           OnCreate="OnCreate"
           OnDelete="OnDelete">
    @if (Mode == "create")
    {
        <FormInputFile Label="Select File" @bind-Value="UploadedFile"></FormInputFile>
        <FormField Label="Organize File">
            <InputRadioGroup @bind-Value="organizeFile">
                @foreach (var option in radioOptions)
                {
                    var radioId = $"radio-{option}";
                    var isDisabled = DisableMergeOption && option == "Merge into existing groups";
                    <div class="form-check form-check-inline">
                        <InputRadio class="form-check-input" id="@radioId" Value="@option" disabled="@isDisabled" />
                        <label class="form-check-label" for="@radioId">@option</label>
                    </div>
                }
            </InputRadioGroup>
        </FormField>
        @if (organizeFile == "Save as new group")
        {
            <FormInputText Label="Group Name" @bind-Value="fileName"></FormInputText>
        }
        else if (organizeFile == "Merge into existing groups")
        {
            <FormField Label="Select Group">
                <select class="form-select" @bind="fileName">
                    <option value=""></option>
                    <option value="group1">Group 1</option>
                    <option value="group2">Group 2</option>
                    <option value="group3">Another Group</option>
                </select>
            </FormField>
        }
        <p class="mt-5">Note: while merging into existing group duplicates will be removed.</p>
    }
    else if (Mode == "delete")
    {
        <FormInputText Label="Description" @bind-Value="editor.Model.Description" Disabled="true"></FormInputText>
        <FormInputNumber Label="Total In File" @bind-Value="editor.Model.TotalItems" Disabled="true"></FormInputNumber>
        <FormInputText Label="File Type" @bind-Value="editor.Model.FileType" Disabled="true"></FormInputText>
        <FormInputDate Label="Date Added" @bind-Value="editor.Model.CreateDate" Disabled="true"></FormInputDate>
    }
</EditModal>

@code {
    [Parameter] public bool DisableMergeOption { get; set; } = false;
    private string Mode = "create";
    private EditModal<BatchFileResponse> editor = new();
    private string? UploadedFile;
    private List<string> radioOptions = new List<string> { "Save as new group", "Merge into existing groups" };
    private string organizeFile = "Save as new group";
    private string fileName;

    public void Show(BatchFileResponse? batchFile = null)
    {
        Mode = "create";
        editor.Show(batchFile);
    }

    public void Delete(BatchFileResponse batchFile)
    {
        Mode = "delete";
        editor.Delete(batchFile);
    }

    private async Task OnDelete()
    {
        bool confirmed = await alert.Confirm("Are you sure you want to delete this bulk file?", "Confirm Deletion");
        if (confirmed)
        {
            await apiClient.BatchFileDeleteAsync(editor.Model.BatchFileID);
        }
    }

    private async Task OnCreate()
    {
        //Todo
        // Implement logic to create a new bulk file
    }
}
