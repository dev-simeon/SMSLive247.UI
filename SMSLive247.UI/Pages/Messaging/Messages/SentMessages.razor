<Card HeaderTitle="Sent Messages">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox" 
                               @onclick="e => ds.LoadData(alert)">
                        <InputSelect @bind-Value="dateRange.Filter" class="form-select">
                            @foreach (var item in Enum.GetValues<DateRangeFilter>())
                            {
                                <option value="@item">@item</option>
                            }
                        </InputSelect>

                        @if (dateRange.Filter == DateRangeFilter.CUSTOM)
                        {
                            <InputDate class="form-control" Type="InputDateType.Date" @bind-Value:format="dd-MM-yyyy" @bind-Value="dateRange.StartDate"></InputDate>
                            <InputDate class="form-control" Type="InputDateType.Date" @bind-Value:format="dd-MM-yyyy" @bind-Value="dateRange.EndDate"></InputDate>
                        }
                    </SearchBox>
                </Left>
                <Right>
                    <Button Type="Button.Style.DOWNLOAD" @onclick="e => downloadModal.Download()">
                        Download Messages
                    </Button>
                </Right>
            </LeftRight>
        </SearchArea>
        <Table DataSource="ds">
            <Columns>
                <Column Header="Sender">@context.SenderID</Column>
                <Column Header="Message">@context.MessageText</Column>
                <Column Header="Delivery Report">
                    @(context.TotalProcessed)/@(context.TotalProcessed + context.TotalFailed)<br />
                    @* @(context.CreditsCharged + "ç")<br /> *@
                    @context.MessageParts page(@context.MessageText.Length)
                </Column>
                <Column Header="Time">
                    <FormatDate DateTime="@context.DateSubmitted"></FormatDate>
                </Column>
                <Column Header="Action">
                    <Actions OnView="e => sentMessageView.Show((int)context.BatchID)"
                             OnDelete="e => messageModal.Delete(context)">
                    </Actions>
                </Column>
            </Columns>
        </Table>
    </Body>
    <Footer>
        <Pager PageState="ds.PageState" OnPageChange="e => ds.SetPage(e).LoadData(alert)" />
    </Footer>
</Card>

<DownloadModal @ref="downloadModal"></DownloadModal>
<SentMessageModal @ref="messageModal"></SentMessageModal>
<SentMessageView @ref="sentMessageView"></SentMessageView>

@code {
    private SearchBox searchBox = new();
    private DateRange dateRange = new();

    private DownloadModal downloadModal = new();
    private SentMessageModal messageModal = new();
    private SentMessageView sentMessageView = new();
    private ApiDataSource<SmsBatchResponse> ds = new();

    protected override async Task OnInitializedAsync()
    {
        ds.Callback = new((PageState p, FilterState? f) =>
        {
            return apiClient.SmsBatchListAsync(p.PageNumber, p.PageSize, dateRange.StartDate, dateRange.EndDate, searchBox.Text);
        });

        await ds.LoadData(alert); 
    }

}
