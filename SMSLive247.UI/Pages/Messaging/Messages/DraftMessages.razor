<Card HeaderTitle="Draft Messages">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox" @onclick="e => ds.LoadData(alert)">
                    </SearchBox>
                </Left>
            </LeftRight>
        </SearchArea>
        <Table DataSource="ds">
            <Columns>
                <Column Header="#"><input class="form-check-input" type="checkbox" /></Column>
                <Column Header="Sender">@context.SenderID</Column>
                <Column Header="Message">@context.MessageText</Column>
                <Column Header="Time">
                    <FormatDate DateTime="@context.SubmitDate"></FormatDate>
                </Column>
                <Column>
                    <Actions OnEdit="e => EditMessage(context)"
                             OnDelete="e => ConfirmDeleteMessage(context.BatchID)">
                    </Actions>
                </Column>
            </Columns>
        </Table>
    </Body>
    <Footer>
        <Pager PageState="ds.PageState" OnPageChange="e => ds.SetPage(e).LoadData(alert)" />
    </Footer>
</Card>

<Modal Title="Edit Draft Message" Hidden="@(!showEditModal)">
    <Body>
        <FormInputText Label="Sender ID" @bind-Value="editDraftMessage.SenderID"></FormInputText>
        <div class="row my-3">
            <label class="form-label col-4">Message</label>
            <div class="col-8">
                <InputTextArea class="form-control" @bind-Value="editDraftMessage.MessageText" rows="5"></InputTextArea>
            </div>
        </div>
    </Body>
    <Footer>
        <Button Type="Button.Style.SAVE" @onclick="SaveEdit">
            Save
        </Button>
        <Button Type="Button.Style.CANCEL" @onclick="CancelEdit">
            Cancel
        </Button>
    </Footer>
</Modal>

@code {
    private SearchBox searchBox = new();
    private ApiDataSource<SmsMessageResponse> ds = new();
    private bool showEditModal = false;
    private SmsMessageResponse editDraftMessage = new SmsMessageResponse();

    protected override async Task OnInitializedAsync()
    {
        ds.Callback = new((PageState p, FilterState? f) =>
        {
            return apiClient.SmsMessageListAsync(p.PageNumber, p.PageSize, null, null);
        });

        await ds.LoadData(alert);
    }

    private void EditMessage(SmsMessageResponse message)
    {
        editDraftMessage = message;
        showEditModal = true;
        StateHasChanged();
    }

    private async Task SaveEdit()
    {
        //Todo
        // Implement the logic to save the edited message
        //await apiClient.UpdateSmsMessageAsync(editDraftMessage);
        showEditModal = false;
        await ds.LoadData(alert); 
    }

    private void CancelEdit()
    {
        showEditModal = false;
        StateHasChanged();
    }

    private async Task ConfirmDeleteMessage(long batchId)
    {
        bool confirmed = await alert.Confirm("Are you sure you want to delete this draft message?", "Confirm Deletion");
        if (confirmed)
        {
            await DeleteMessage(batchId);
        }
    }

    private async Task DeleteMessage(long batchId)
    {
        await apiClient.SmsBatchDeleteAsync((int)batchId);
        await ds.LoadData(alert);
    }
}
