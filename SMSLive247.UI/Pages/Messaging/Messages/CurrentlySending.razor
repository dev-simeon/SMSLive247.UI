<Card HeaderTitle="Currently Sending Messages">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox" 
                               @onclick="e => LoadData()">
                    </SearchBox>
                </Left>
            </LeftRight>
        </SearchArea>
        <Table Items="GetFilteredItems()">
            <Columns>
                <Column Header="#"><input class="form-check-input" type="checkbox" /></Column>
                <Column Header="Sender ID">
                    @context.SenderID
                </Column>
                <Column Header="Message">
                    @context.MessageText
                </Column>
                <Column Header="Time of Schedule">
                    <FormatDate DateTime="@context.DateSubmitted"></FormatDate>
                </Column>
                <Column>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-success" @onclick="e => ResumeBatch(context.BatchID)">Send Now</button>
                        <button type="button" class="btn btn-danger" @onclick="e => AbortBatch(context.BatchID)">Abort</button>
                    </div>
                </Column>
            </Columns>
        </Table>
    </Body>
</Card>

@code {
    private SearchBox searchBox = new();
    private List<SmsBatchResponse> items = [];

    protected async Task LoadData()
    {
        var response = await apiClient.SmsBatchPendingListAsync();
        items = response.Result.ToList();
    }

    private async Task AbortBatch(long batchId)
    {
        var message = "Are you sure you want to cancel this batch?";
        bool confirmed = await alert.Confirm(message, "Confirm");

        if (confirmed)
        {
            await apiClient.SmsBatchPendingAbortAsync((int)batchId);
        }
    }

    private async Task ResumeBatch(long batchId)
    {
        var message = "Are you sure you want to resume this batch now?";
        bool confirmed = await alert.Confirm(message, "Confirm");

        if (confirmed)
        {
            //await apiClient.sms((int)batchId);
        }
    }

    private List<SmsBatchResponse> GetFilteredItems()
    {
        if (items != null)
        {
            return items.Where(x => x.MessageText.Contains(searchBox.Text ?? "")).ToList();
        }
        return [];
    }
}
