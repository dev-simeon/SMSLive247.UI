<Card HeaderTitle="Currently Sending Messages">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox"></SearchBox>
                </Left>
            </LeftRight>
        </SearchArea>
        <Table Items="GetFilteredItems()">
            <Columns>
                <Column Header="Scheduled Time">
                    <FormatDate DateTime="@context.DateSubmitted"></FormatDate><br />
                    <span class="badge text-bg-warning">@context.Status</span>
                </Column>
                <Column Header="Sender ID">
                    @context.SenderID
                </Column>
                <Column Header="Message" Width="50%">
                    @context.MessageText.Left(160)
                    <small class="text-muted">@context.MessageParts Page (@context.MessageText.Length)</small>
                </Column>
                <Column>
                    <button type="button" class="btn btn-secondary position-relative">
                        Sent
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @context.TotalProcessed
                        </span>
                    </button>

                    <button type="button" class="btn btn-secondary position-relative">
                        Failed
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @context.TotalFailed
                        </span>
                    </button>
                </Column>
                <Column>
                    <div class="btn-group float-end">
                        <button class="btn btn-outline-secondary"
                                @onclick="e => ResumeBatch(context.BatchID)"
                                @onclick:stopPropagation="true" title="Resume Batch">
                            <i class="fa fa-play"></i>
                        </button>
                        <button class="btn btn-outline-secondary"
                                @onclick="e => AbortBatch(context.BatchID)"
                                @onclick:stopPropagation="true" title="Abort Batch">
                            <i class="fa fa-stop"></i>
                        </button>
                    </div>
                </Column>
            </Columns>
        </Table>
    </Body>
</Card>

@code {
    private SearchBox searchBox = new();
    private List<SmsBatchResponse> items = [];

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected async Task LoadData()
    {
        var response = await apiClient.SmsBatchPendingListAsync();
        items = response.Result.ToList();
    }

    private async Task AbortBatch(long batchId)
    {
        var message = "Are you sure you want to cancel this batch?";
        bool confirmed = await alert.Confirm(message, "Confirm");

        if (confirmed)
        {
            await apiClient.SmsBatchPendingAbortAsync((int)batchId);
            await LoadData(); // Reload data after aborting
        }
    }

    private async Task ResumeBatch(long batchId)
    {
        var message = "Are you sure you want to resume this batch now?";
        bool confirmed = await alert.Confirm(message, "Confirm");
        var scheduledMessage = await apiClient.SmsBatchGetAsync((int)batchId);

        if (confirmed)
        {
            // SmsBatchRequest request = new SmsBatchRequest()
            // {
            //      SenderID = scheduledMessage.Result.SenderID,
            //      MessageText = scheduledMessage.Result.MessageText,
            //      PhoneNumbers = 
            // }
            // await apiClient.SmsBatchCreateAsync(request); 
            await LoadData();
        }
    }

    private List<SmsBatchResponse> GetFilteredItems()
    {
        if (items != null)
        {
            return items.Where(x => x.MessageText.Contains(searchBox.Text ?? "")).ToList();
        }
        return [];
    }
}
