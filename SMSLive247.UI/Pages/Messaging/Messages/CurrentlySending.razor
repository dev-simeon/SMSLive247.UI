<Card HeaderTitle="Currently Sending Messages">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox" @onclick="e => ds.LoadData(alert)">
                        <select class="form-select">
                            <option selected>All</option>
                            <option>Pending</option>
                            <option>Aborted</option>
                        </select>
                    </SearchBox>
                </Left>
            </LeftRight>
        </SearchArea>
        <Table DataSource="ds">
            <Columns>
                <Column Header="#"><input class="form-check-input" type="checkbox" /></Column>
                <Column Header="Sender ID">
                   @context.SenderID
                </Column>
                <Column Header="Message">
                    @context.MessageText
                </Column>
                <Column Header="Time of Schedule">
                    <FormatDate DateTime="@context.SubmitDate"></FormatDate>
                </Column>
            </Columns>
        </Table>
    </Body>
    <Footer>
        <Pager PageState="ds.PageState" OnPageChange="e => ds.SetPage(e).LoadData(alert)" />
    </Footer>
</Card>









@code {
    private SearchBox searchBox = new();
    private ApiDataSource<SmsBatchResponse> ds = new();


    protected override async Task OnInitializedAsync()
    {
        ds.Callback = new((PageState p, FilterState? f) =>
        {
            return apiClient.SmsBatchPendingListAsync(p.PageNumber, p.PageSize, null, null);
        });

        await ds.LoadData(alert);
    }
}