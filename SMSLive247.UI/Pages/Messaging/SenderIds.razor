@page "/Messaging/SenderIds"
@attribute [Authorize]

<PageTitle>SMSLive247 - SenderIDs</PageTitle>
<Title>My Sender IDs</Title>

<Card HeaderTitle="List of Sender IDs on your account">
    <Body>
        <SearchArea>
            <LeftRight>
                <Left>
                    <SearchBox @ref="searchBox" @onclick="OnSearch">
                        <InputSelect class="form-select" 
                                     @bind-Value="searchStatus" 
                                     @bind-Value:after="OnSearch">
                            <option value="">All</option>
                            <option value="PENDING">Pending</option>
                            <option value="APPROVED">Approved</option>
                            <option value="REJECTED">Rejected</option>
                        </InputSelect>
                    </SearchBox>
                </Left>
                <Right>
                    <Button Type="Button.Style.ADD" 
                            @onclick="e => senderIdModal.Show()">
                        Request for Sender ID
                    </Button>
                </Right>
            </LeftRight>
        </SearchArea>
        <Table Items="filteredItems">
            <Columns>
                <Column Header="Sender ID">@context.SenderID</Column>
                <Column Header="Purpose / Sample Message" Width="40%">
                    @context.Purpose 
                    <small class="text-muted">@context.SampleText</small>
                </Column>
                <Column Header="Date Requested">
                    <FormatDate DateTime="@context.DateRequested"></FormatDate>
                </Column>
                <Column Header="Date Approved">
                    @if (context.DateDecided.HasValue)
                    {
                        <FormatDate DateTime="context.DateDecided.Value.DateTime"></FormatDate>
                    }
                    else
                    {
                        <span>Pending Approval</span>
                    }
                </Column>
                <Column Header="Status">
                    @if (context.Status == "APPROVED")
                    {
                        <span class="badge text-bg-success">APPROVED</span>
                    }
                    else if (context.Status == "REJECTED")
                    {
                        <span class="badge text-bg-error">REJECTED</span>
                    }
                    else
                    {
                        <span class="badge text-bg-danger">REJECTED</span>
                    }
                </Column>
                <Column>
                    <Actions OnDelete="e => senderIdModal.Delete(context)">
                    </Actions>
                </Column>
            </Columns>
        </Table>
    </Body>
</Card>

<SenderIdModal @ref="senderIdModal" OnCompleted="FetchData"></SenderIdModal>

@code {
    private SearchBox searchBox = new();
    private SenderIdModal senderIdModal = new();

    private string searchStatus = "";
    private List<SenderIdResponse> items = [];
    private List<SenderIdResponse> filteredItems = [];

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    private async Task FetchData()
    {
        var response = await apiClient.SenderIdListAsync(1, 500);

        if (response.StatusCode == 200)
        {
            items = response.Result.ToList();
            filteredItems = items;
        }
    }

    private void OnSearch()
    {
        filteredItems = items;

        if (!string.IsNullOrWhiteSpace(searchStatus))
        {
            filteredItems = filteredItems.Where(x => x.Status == searchStatus).ToList();
        }

        if (!string.IsNullOrWhiteSpace(searchBox.Text))
        {
            filteredItems = filteredItems.Where(x => x.SenderID.Contains(
                searchBox.Text, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }
}
